name: Kryptuq Build Script

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
      
jobs:
  build:
    name: Building Yuzu Binaries
    runs-on: ubuntu-latest
    steps:
      # Check
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Get Updates
      - name: Updates
        run: sudo apt update
      
      # Installs needed Dependencies
      - name: Dependencies
        run: sudo apt-get install autoconf cmake g++-10 gcc-10 git glslang-tools libasound2 libboost-context-dev qttools5-dev qttools5-dev-tools libglu1-mesa-dev libhidapi-dev libpulse-dev libtool libudev-dev libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1 libxext-dev libxkbcommon-x11-0 mesa-common-dev nasm ninja-build python3 python3-pip qtbase5-dev qtbase5-private-dev qtwebengine5-dev libmbedtls-dev

      #Install Conan
      - name: Install Conan
        run: pip3 install conan --upgrade

      - name: Before Build
        run: |
          git clone https://github.com/Kryptuq/glslang-linux.git
          mkdir build && cd build
          
          cmake ..                                                                                      \
          -DCMAKE_BUILD_TYPE=Release                                                                    \
          -DCMAKE_C_COMPILER=gcc-10                                                                     \
          -DCMAKE_CXX_COMPILER=g++-10                                                                   \
          --DTITLE_BAR_FORMAT_IDLE="yuzu Early Access ${{ github.event.head_commit.message }}"          \
          -DTITLE_BAR_FORMAT_RUNNING="yuzu Early Access ${{ github.event.head_commit.message }} | {3}"  \
          -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON                                                       \
          -DUSE_DISCORD_PRESENCE=ON                                                                     \
          -DENABLE_QT_TRANSLATION=ON                                                                    \
          -DYUZU_USE_QT_WEB_ENGINE=OFF                                                                  \
          -DYUZU_USE_EXTERNAL_SDL2=OFF 		                                                              \
          -G Ninja 

          ninja
          

      #Build the .sln
      - name: Build app for release
        run: msbuild build\yuzu.sln

      - name: After Build
        run: |
          mv build\bin\Release build\bin\yuzu-early-access

      # Publishing to Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: EA${{ github.event.head_commit.message }}
          release_name: EA${{ github.event.head_commit.message }}
          body: |
            Yuzu Early Access CI Builds with Appveyor [Current Build: yuzu Early Access ${{ github.event.head_commit.message }}]
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/bin
          asset_name: EA${{ github.event.head_commit.message }}
          tag: EA${{ github.event.head_commit.message }}
          overwrite: true
