name: Yuzu Build Script

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    name: Building Yuzu Binaries
    runs-on: self-hosted
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: actions/checkout
        uses: actions/checkout@v2
        
      #Preparing Update
      - name: Before Build
        run: |
          mkdir build
          cd build
          mkdir bin
          cd bin

      #Check if Update happened with script
      - name: Run Script for Check
        shell: pwsh
        run: ./check.ps1
  
      #If Update exists
      - name: Zip the New Update
        uses: vimtor/action-zip@v1
        with:
          files: build/bin
          dest: yuzu-early-access-EA${{ github.event.head_commit.message }}.zip
          recursive: true
          
      #Revert with Script
      - name: Run Script for Reverting
        shell: pwsh
        run: ./revert.ps1

      #Publishing to Release
#      - name: Release to GitHub Releases
#        uses: softprops/action-gh-release@v1
#        with:
#          name: EA${{ github.event.head_commit.message }}
#          tag_name: EA${{ github.event.head_commit.message }}
#          body: "Yuzu Early Access CI Builds with Github Actions [Current Build: yuzu Early Access ${{ github.event.head_commit.message }}]"
#          files: ${{ github.workspace }}\yuzu-early-access-EA${{ github.event.head_commit.message }}.zip

      #Upload Artifacts Just in Case
 #     - uses: actions/upload-artifact@v2
  #      with:
   #       name: Built yuzu Emulator
    #      path: ${{ github.workspace }}\build\bin\yuzu-early-access

      #Upload Log if build Fails
      - name: Upload Logs if Failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}\build\CMakeFiles
